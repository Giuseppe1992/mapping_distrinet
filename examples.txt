											TOPOLOGY
				  2CPU                                                                     2CPU
				Master1 [eth0] ------1Gbps-------[eth0] SW [eth1] ------1Gbps-------[eth0] Node1
				 [eth1]                                [eth2]
				   |                                      |
				   |________________2Gbps_________________|



# networkx

import networkx as nx

g = nx.MultiGraph()
# nodes
g.add_node("Master1", cores=2)
g.add_node("Node1", cores=2)
# links
g.add_edge("Master1", "SW", rate=1000, interfaces = {"Master1":"eth0","SW":"eth0"})
g.add_edge("Master1", "SW", rate=2000, interfaces = {"Master1":"eth1","SW":"eth2"})
g.add_edge("Node1", "SW", rate=1000, interfaces = {"Master1":"eth0","SW":"eth1"})

# mininet


phy_topo = Topo()

# Add nodes
master1 = phy_topo.addHost('Master1', cores=2)
node1 = phy_topo.addHost('Node1', cores=2)
sw = phy_topo.addSwitch('SW')
# Add links
phy_topo.addLink(master1, sw, port1="eth0", port2="eth0", rate=1000)
phy_topo.addLink(master1, sw, port1="eth1", port2="eth2", rate=2000)
phy_topo.addLink(node1, sw, port1="eth0", port2="eth1", rate=1000)


# JSON
{
    "nodes": [
        {
            "id": "Master1",
            "cores": 2,
            "memory": 0
        },
        {
            "id": "Node1",
            "cores": 2,
            "memory": 0
        }
    ],
    "links": [
        {
            "source": "Master1",
            "target": "SW",
            "devices": [
                {
                    "source_device": "eth0",
                    "target_device": "eth0",
                    "rate": 1000
                },
                {
                    "source_device": "eth1",
                    "target_device": "eth2",
                    "rate": 2000
                }
            ]
        },
        {
            "source": "Node1",
            "target": "SW",
            "devices": [
                {
                    "source_device": "eth0",
                    "target_device": "eth1",
                    "rate": 1000
                }
            ]
        }
    ]
}